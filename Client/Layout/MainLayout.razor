@using Client.Pages.Components.Snackbar
@using Client.Pages.OtherPages
@using Microsoft.AspNetCore.Authorization

@inject ThemeService ThemeService 

@inherits LayoutComponentBase
@attribute [Authorize]
<CascadingValue Value="isSidebarOpen">
    <div class="flex min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100">
        <nav class="bg-gray-800 text-gray-100 w-64 flex-shrink-0 fixed h-full transform transition-transform duration-300 ease-in-out 
             @(isSidebarOpen ? "translate-x-0" : "-translate-x-full")">
            <NavMenu OnToggleNavMenu="ToggleSidebar"/>
        </nav>

        <!-- Main Content with dynamic margin -->
        <div class="flex-1 flex flex-col w-full transition-all duration-300 ease-in-out
             @(isSidebarOpen ? "ml-64" : "ml-0")">
            <!-- Header -->
            <header class="flex justify-between items-center bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-4">

                <div class="inline-flex justify-between items-center">
                    <button @onclick="ToggleSidebar" class="@(isSidebarOpen ? "hidden" : "block") inline-flex items-center justify-center p-2 rounded-md text-gray-500 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none">
                        <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
                        </svg>
                    </button>
                    <h1 class="text-xl font-semibold p-2 text-gray-900 dark:text-white">Dashboard</h1>
                </div>

                <div class="flex justify-end md:top-row px-4">
                    <ProfileDropdown/>
                </div>

            </header>

            <!-- Content -->
            <main class="flex-1 overflow-y-auto bg-gray-50 dark:bg-gray-900">

                <article class="content px-4">
                    @Body
                </article>
            </main>
            <div id="blazor-error-ui" class="hidden bg-red-50 dark:bg-red-900 text-red-900 dark:text-red-100">
                An unhandled error has occurred.
                <a href="" class="reload text-red-600 dark:text-red-300 hover:text-red-800 dark:hover:text-red-100">Reload</a>
                <a class="dismiss text-red-600 dark:text-red-300 hover:text-red-800 dark:hover:text-red-100">🗙</a>
            </div>
            
            <!-- Position Snackbar here -->
            <div class="relative">
                <Snackbar />
            </div>
        </div>
    </div>
</CascadingValue>

@code {
    private bool isSidebarOpen = true;
    [Parameter] public EventCallback<bool> OnSidebarToggle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeTheme();
        await base.OnInitializedAsync();
    }

    private async Task ToggleSidebar()
    {
        isSidebarOpen = !isSidebarOpen;
        await OnSidebarToggle.InvokeAsync(isSidebarOpen);
        StateHasChanged();
    }
}