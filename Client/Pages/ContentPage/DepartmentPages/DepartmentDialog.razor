<div class="fixed inset-0 bg-gray-800 bg-opacity-50 overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">
        <div class="mt-3">
            <h3 class="text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4">@Title Department</h3>

            <EditForm Model="@Department" OnValidSubmit="SaveDepartment">
                <DataAnnotationsValidator/>

                <!-- <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Department ID</label>
                    <InputNumber @bind-Value="Department.Id" disabled
                                 class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600"/>
                </div> -->

                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Department Name</label>
                    <InputText @bind-Value="Department.Name"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600"/>
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">General Department</label>
                    <select @bind="Department.GeneralDepartmentId"
                            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
                        <option value="">Select General Department</option>
                        @foreach (var genDept in GeneralDepartments)
                        {
                            <option value="@genDept.Id">@genDept.Name</option>
                        }
                    </select>
                </div>
                <div class="flex justify-end space-x-3 mt-6">
                    <button type="button" @onclick="() => OnClose.InvokeAsync()"
                            class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400">
                        Cancel
                    </button>
                    <button type="submit"
                            class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
                        Save
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public Department Department { get; set; } = new();
    [Parameter] public GeneralDepartment GeneralDepartment { get; set; } = new();
    [Parameter] public List<GeneralDepartment> GeneralDepartments { get; set; } = new();
    
    [Parameter] public EventCallback<Department> HandleSaveOperationEvent { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    
    private bool IsVisible { get; set; } = false;
    [Parameter] public string Title { get; set; } = "Add";

    private async void SaveDepartment()
    {
        if (string.IsNullOrEmpty(Department.Name))
        {
            SnackbarService.ShowSnackbar("You need to provide department name", "Alert");
        }

        await HandleSaveOperationEvent.InvokeAsync(Department);
    }






    private async void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }

    private void OnValueChanged(ChangeEventArgs args)
    {
        if (args.Value?.ToString() != null)
        {
            Department.GeneralDepartmentId = int.Parse(args.Value.ToString());
        }
    }

}


